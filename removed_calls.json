{
  "removedPerFunction": {
    "analyzer.FindCalls": [
      "package.function"
    ],
    "handlers.RegisterRoutes": [
      "router.Static",
      "router.Group",
      "v1.POST",
      "v1.GET",
      "router.NoRoute"
    ],
    "handlers.getProjectRoot": [
      "info.IsDir"
    ],
    "handlers.handleFillPDF": [
      "c.Request.FormFile",
      "pdfFile.Close",
      "pdfFile.Read",
      "xfdfFile.Close",
      "xfdfFile.Read",
      "c.PostForm",
      "c.JSON",
      "c.Header",
      "c.Data"
    ],
    "handlers.handleGenerateTemplatePDF": [
      "c.ShouldBindJSON",
      "c.JSON"
    ],
    "handlers.handleGetTemplateData": [
      "c.Query",
      "c.JSON",
      "c.Header",
      "c.Data"
    ],
    "handlers.handleMergePDFs": [
      "c.MultipartForm",
      "c.JSON",
      "fh.Open",
      "f.Close",
      "c.Header",
      "c.Data"
    ],
    "handlers.handleSPA": [
      "c.JSON",
      "c.File"
    ],
    "handlers.handlehtmlToImage": [
      "c.ShouldBindJSON",
      "c.JSON",
      "c.Header",
      "c.Data"
    ],
    "handlers.handlehtmlToPDF": [
      "c.ShouldBindJSON",
      "c.JSON",
      "c.Header",
      "c.Data"
    ],
    "main.corsMiddleware": [
      "c.Header",
      "c.AbortWithStatus",
      "c.Next"
    ],
    "main.handleRelations": [
      "global.mu.RLock",
      "global.mu.RUnlock",
      "c.Query",
      "c.JSON"
    ],
    "main.handleSearch": [
      "global.mu.RLock",
      "global.mu.RUnlock",
      "c.Query",
      "c.JSON"
    ],
    "main.load": [
      "info.IsDir",
      "global.mu.Lock",
      "global.mu.Unlock"
    ],
    "main.main": [
      "gin.Default",
      "router.Run"
    ],
    "pdf.ConvertHTMLToImage": [
      "gochromedp.ConvertHTMLToImage",
      "gochromedp.ConvertURLToImage"
    ],
    "pdf.ConvertHTMLToPDF": [
      "gochromedp.ConvertHTMLToPDF",
      "gochromedp.ConvertURLToPDF"
    ],
    "pdf.FillPDFWithXFDF": [
      "widthsBuf.WriteString",
      "widthsBuf.String",
      "zlib.NewWriterLevel",
      "zw.Write",
      "zw.Close",
      "compBuf.Bytes",
      "xrefBuf.WriteString",
      "xrefBuf.Bytes"
    ],
    "pdf.FlattenPDFBytes": [
      "scripts.FlattenPDFBytes"
    ],
    "pdf.GenerateTemplatePDF": [
      "pdfBuffer.WriteString",
      "pdfBuffer.Len",
      "contentStream.Len",
      "pdfBuffer.Write",
      "contentStream.Bytes",
      "c.Header",
      "c.Data",
      "pdfBuffer.Bytes"
    ],
    "pdf.MergePDFs": [
      "out.Write",
      "out.Len",
      "out.WriteString",
      "out.Bytes"
    ],
    "pdf.addParentRef": [
      "result.Write",
      "result.WriteString",
      "result.Bytes"
    ],
    "pdf.decodeHexString": [
      "hex.DecodeString"
    ],
    "pdf.decompressStreams": [
      "buf.Write",
      "buf.Bytes"
    ],
    "pdf.drawFooter": [
      "contentStream.WriteString"
    ],
    "pdf.drawPageBorder": [
      "contentStream.WriteString"
    ],
    "pdf.drawPageNumber": [
      "contentStream.WriteString"
    ],
    "pdf.drawTable": [
      "pageManager.CheckPageBreak",
      "pageManager.AddNewPage",
      "pageManager.GetCurrentContentStream",
      "contentStream.WriteString"
    ],
    "pdf.drawTitle": [
      "contentStream.WriteString"
    ],
    "pdf.drawWatermark": [
      "contentStream.WriteString"
    ],
    "pdf.escapePDFString": [
      "sb.WriteRune",
      "sb.String"
    ],
    "pdf.generateAllContent": [
      "pageManager.GetCurrentContentStream",
      "pageManager.CheckPageBreak",
      "pageManager.AddNewPage"
    ],
    "pdf.replaceRefsOutsideStreams": [
      "out.Write",
      "out.Bytes"
    ],
    "pdf.tryFlateDecompress": [
      "flate.NewReader",
      "r.Close",
      "out.Bytes"
    ],
    "pdf.tryZlibDecompress": [
      "zlib.NewReader",
      "r.Close",
      "out.Bytes"
    ]
  },
  "uniqueRemovedCalls": [
    "c.Query",
    "flate.NewReader",
    "out.WriteString",
    "pageManager.AddNewPage",
    "pdfFile.Read",
    "c.File",
    "xrefBuf.WriteString",
    "result.Write",
    "xfdfFile.Close",
    "c.AbortWithStatus",
    "pageManager.GetCurrentContentStream",
    "router.Static",
    "c.PostForm",
    "router.Use",
    "contentStream.WriteString",
    "c.MultipartForm",
    "gochromedp.ConvertURLToImage",
    "zlib.NewWriterLevel",
    "info.IsDir",
    "c.ShouldBindJSON",
    "f.Close",
    "widthsBuf.WriteString",
    "scripts.FlattenPDFBytes",
    "pdfBuffer.WriteString",
    "gin.Default",
    "router.GET",
    "router.Run",
    "out.Write",
    "sb.String",
    "zlib.NewReader",
    "buf.Write",
    "sb.WriteRune",
    "c.JSON",
    "c.Next",
    "gochromedp.ConvertHTMLToPDF",
    "zw.Close",
    "pdfBuffer.Bytes",
    "hex.DecodeString",
    "r.Close",
    "xrefBuf.Bytes",
    "pdfBuffer.Len",
    "v1.GET",
    "pdfFile.Close",
    "xfdfFile.Read",
    "fh.Open",
    "router.POST",
    "gochromedp.ConvertHTMLToImage",
    "result.Bytes",
    "buf.Bytes",
    "pageManager.CheckPageBreak",
    "compBuf.Bytes",
    "package.function",
    "c.Request.FormFile",
    "c.Header",
    "global.mu.Unlock",
    "widthsBuf.String",
    "zw.Write",
    "router.NoRoute",
    "c.Data",
    "global.mu.RLock",
    "contentStream.Bytes",
    "out.Len",
    "v1.POST",
    "global.mu.Lock",
    "contentStream.Len",
    "router.Group",
    "global.mu.RUnlock",
    "gochromedp.ConvertURLToPDF",
    "pdfBuffer.Write",
    "out.Bytes",
    "result.WriteString"
  ]
}